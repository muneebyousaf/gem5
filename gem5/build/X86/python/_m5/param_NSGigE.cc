/**
 * DO NOT EDIT THIS FILE!
 * File automatically generated by
 *   build_tools/sim_object_param_struct_cc.py:62
 */

#include "pybind11/pybind11.h"
#include "pybind11/stl.h"

#include <type_traits>

#include "base/compiler.hh"
#include "params/NSGigE.hh"
#include "sim/init.hh"
#include "sim/sim_object.hh"

#include "dev/net/ns_gige.hh"

namespace py = pybind11;

namespace gem5
{

static void
module_init(py::module_ &m_internal)
{
    py::module_ m = m_internal.def_submodule("param_NSGigE");
    py::class_<NSGigEParams, EtherDevBaseParams, std::unique_ptr<NSGigEParams, py::nodelete>>(m, "NSGigEParams")
        .def(py::init<>())
        .def("create", &NSGigEParams::create)
        .def_readwrite("dma_data_free", &NSGigEParams::dma_data_free)
        .def_readwrite("dma_desc_free", &NSGigEParams::dma_desc_free)
        .def_readwrite("dma_no_allocate", &NSGigEParams::dma_no_allocate)
        ;

    py::class_<gem5::NSGigE, gem5::EtherDevBase, std::unique_ptr<gem5::NSGigE, py::nodelete>>(m, "gem5_COLONS_NSGigE")
        ;

}

static EmbeddedPyBind embed_obj("NSGigE", module_init, "EtherDevBase");

} // namespace gem5

namespace gem5
{

namespace
{

class DummyNSGigEParamsClass
{
  public:
    gem5::NSGigE *create() const;
};

template <class CxxClass, class Enable=void>
class DummyNSGigEShunt;

template <class CxxClass>
class DummyNSGigEShunt<CxxClass, std::enable_if_t<
    std::is_constructible_v<CxxClass,
        const NSGigEParams &>>>
{
  public:
    using Params = NSGigEParams;
    static gem5::NSGigE *
    create(const Params &p)
    {
        return new CxxClass(p);
    }
};

template <class CxxClass>
class DummyNSGigEShunt<CxxClass, std::enable_if_t<
    !std::is_constructible_v<CxxClass,
        const NSGigEParams &>>>
{
  public:
    using Params = DummyNSGigEParamsClass;
    static gem5::NSGigE *
    create(const Params &p)
    {
        return nullptr;
    }
};

} // anonymous namespace

[[maybe_unused]] gem5::NSGigE *
DummyNSGigEShunt<gem5::NSGigE>::Params::create() const
{
    return DummyNSGigEShunt<gem5::NSGigE>::
        create(*this);
}

} // namespace gem5
