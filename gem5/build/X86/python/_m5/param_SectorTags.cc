/**
 * DO NOT EDIT THIS FILE!
 * File automatically generated by
 *   build_tools/sim_object_param_struct_cc.py:62
 */

#include "pybind11/pybind11.h"
#include "pybind11/stl.h"

#include <type_traits>

#include "base/compiler.hh"
#include "params/SectorTags.hh"
#include "sim/init.hh"
#include "sim/sim_object.hh"

#include "mem/cache/tags/sector_tags.hh"

#include "base/types.hh"
#include "base/types.hh"
#include "mem/cache/replacement_policies/base.hh"
namespace py = pybind11;

namespace gem5
{

static void
module_init(py::module_ &m_internal)
{
    py::module_ m = m_internal.def_submodule("param_SectorTags");
    py::class_<SectorTagsParams, BaseTagsParams, std::unique_ptr<SectorTagsParams, py::nodelete>>(m, "SectorTagsParams")
        .def(py::init<>())
        .def("create", &SectorTagsParams::create)
        .def_readwrite("assoc", &SectorTagsParams::assoc)
        .def_readwrite("num_blocks_per_sector", &SectorTagsParams::num_blocks_per_sector)
        .def_readwrite("replacement_policy", &SectorTagsParams::replacement_policy)
        ;

    py::class_<gem5::SectorTags, gem5::BaseTags, std::unique_ptr<gem5::SectorTags, py::nodelete>>(m, "gem5_COLONS_SectorTags")
        ;

}

static EmbeddedPyBind embed_obj("SectorTags", module_init, "BaseTags");

} // namespace gem5

namespace gem5
{

namespace
{

class DummySectorTagsParamsClass
{
  public:
    gem5::SectorTags *create() const;
};

template <class CxxClass, class Enable=void>
class DummySectorTagsShunt;

template <class CxxClass>
class DummySectorTagsShunt<CxxClass, std::enable_if_t<
    std::is_constructible_v<CxxClass,
        const SectorTagsParams &>>>
{
  public:
    using Params = SectorTagsParams;
    static gem5::SectorTags *
    create(const Params &p)
    {
        return new CxxClass(p);
    }
};

template <class CxxClass>
class DummySectorTagsShunt<CxxClass, std::enable_if_t<
    !std::is_constructible_v<CxxClass,
        const SectorTagsParams &>>>
{
  public:
    using Params = DummySectorTagsParamsClass;
    static gem5::SectorTags *
    create(const Params &p)
    {
        return nullptr;
    }
};

} // anonymous namespace

[[maybe_unused]] gem5::SectorTags *
DummySectorTagsShunt<gem5::SectorTags>::Params::create() const
{
    return DummySectorTagsShunt<gem5::SectorTags>::
        create(*this);
}

} // namespace gem5
