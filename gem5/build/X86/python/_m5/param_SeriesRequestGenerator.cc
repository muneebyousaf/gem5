/**
 * DO NOT EDIT THIS FILE!
 * File automatically generated by
 *   build_tools/sim_object_param_struct_cc.py:62
 */

#include "pybind11/pybind11.h"
#include "pybind11/stl.h"

#include <type_traits>

#include "base/compiler.hh"
#include "params/SeriesRequestGenerator.hh"
#include "sim/init.hh"
#include "sim/sim_object.hh"

#include "cpu/testers/directedtest/SeriesRequestGenerator.hh"

#include "base/types.hh"
#include "base/types.hh"
#include "base/types.hh"
namespace py = pybind11;

namespace gem5
{

static void
module_init(py::module_ &m_internal)
{
    py::module_ m = m_internal.def_submodule("param_SeriesRequestGenerator");
    py::class_<SeriesRequestGeneratorParams, DirectedGeneratorParams, std::unique_ptr<SeriesRequestGeneratorParams, py::nodelete>>(m, "SeriesRequestGeneratorParams")
        .def(py::init<>())
        .def("create", &SeriesRequestGeneratorParams::create)
        .def_readwrite("addr_increment_size", &SeriesRequestGeneratorParams::addr_increment_size)
        .def_readwrite("num_series", &SeriesRequestGeneratorParams::num_series)
        .def_readwrite("percent_writes", &SeriesRequestGeneratorParams::percent_writes)
        ;

    py::class_<gem5::SeriesRequestGenerator, gem5::DirectedGenerator, std::unique_ptr<gem5::SeriesRequestGenerator, py::nodelete>>(m, "gem5_COLONS_SeriesRequestGenerator")
        ;

}

static EmbeddedPyBind embed_obj("SeriesRequestGenerator", module_init, "DirectedGenerator");

} // namespace gem5

namespace gem5
{

namespace
{

class DummySeriesRequestGeneratorParamsClass
{
  public:
    gem5::SeriesRequestGenerator *create() const;
};

template <class CxxClass, class Enable=void>
class DummySeriesRequestGeneratorShunt;

template <class CxxClass>
class DummySeriesRequestGeneratorShunt<CxxClass, std::enable_if_t<
    std::is_constructible_v<CxxClass,
        const SeriesRequestGeneratorParams &>>>
{
  public:
    using Params = SeriesRequestGeneratorParams;
    static gem5::SeriesRequestGenerator *
    create(const Params &p)
    {
        return new CxxClass(p);
    }
};

template <class CxxClass>
class DummySeriesRequestGeneratorShunt<CxxClass, std::enable_if_t<
    !std::is_constructible_v<CxxClass,
        const SeriesRequestGeneratorParams &>>>
{
  public:
    using Params = DummySeriesRequestGeneratorParamsClass;
    static gem5::SeriesRequestGenerator *
    create(const Params &p)
    {
        return nullptr;
    }
};

} // anonymous namespace

[[maybe_unused]] gem5::SeriesRequestGenerator *
DummySeriesRequestGeneratorShunt<gem5::SeriesRequestGenerator>::Params::create() const
{
    return DummySeriesRequestGeneratorShunt<gem5::SeriesRequestGenerator>::
        create(*this);
}

} // namespace gem5
