/**
 * DO NOT EDIT THIS FILE!
 * File automatically generated by
 *   build_tools/sim_object_param_struct_cc.py:62
 */

#include "pybind11/pybind11.h"
#include "pybind11/stl.h"

#include <type_traits>

#include "base/compiler.hh"
#include "params/IntelTrace.hh"
#include "sim/init.hh"
#include "sim/sim_object.hh"

#include "cpu/inteltrace.hh"

namespace py = pybind11;

namespace gem5
{

static void
module_init(py::module_ &m_internal)
{
    py::module_ m = m_internal.def_submodule("param_IntelTrace");
    py::class_<IntelTraceParams, InstTracerParams, std::unique_ptr<IntelTraceParams, py::nodelete>>(m, "IntelTraceParams")
        .def(py::init<>())
        .def("create", &IntelTraceParams::create)
        ;

    py::class_<gem5::Trace::IntelTrace, gem5::Trace::InstTracer, std::unique_ptr<gem5::Trace::IntelTrace, py::nodelete>>(m, "gem5_COLONS_Trace_COLONS_IntelTrace")
        ;

}

static EmbeddedPyBind embed_obj("IntelTrace", module_init, "InstTracer");

} // namespace gem5

namespace gem5
{

namespace
{

class DummyIntelTraceParamsClass
{
  public:
    gem5::Trace::IntelTrace *create() const;
};

template <class CxxClass, class Enable=void>
class DummyIntelTraceShunt;

template <class CxxClass>
class DummyIntelTraceShunt<CxxClass, std::enable_if_t<
    std::is_constructible_v<CxxClass,
        const IntelTraceParams &>>>
{
  public:
    using Params = IntelTraceParams;
    static gem5::Trace::IntelTrace *
    create(const Params &p)
    {
        return new CxxClass(p);
    }
};

template <class CxxClass>
class DummyIntelTraceShunt<CxxClass, std::enable_if_t<
    !std::is_constructible_v<CxxClass,
        const IntelTraceParams &>>>
{
  public:
    using Params = DummyIntelTraceParamsClass;
    static gem5::Trace::IntelTrace *
    create(const Params &p)
    {
        return nullptr;
    }
};

} // anonymous namespace

[[maybe_unused]] gem5::Trace::IntelTrace *
DummyIntelTraceShunt<gem5::Trace::IntelTrace>::Params::create() const
{
    return DummyIntelTraceShunt<gem5::Trace::IntelTrace>::
        create(*this);
}

} // namespace gem5
