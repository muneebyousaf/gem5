/**
 * DO NOT EDIT THIS FILE!
 * File automatically generated by
 *   build_tools/sim_object_param_struct_cc.py:62
 */

#include "pybind11/pybind11.h"
#include "pybind11/stl.h"

#include <type_traits>

#include "base/compiler.hh"
#include "params/BloomFilterH3.hh"
#include "sim/init.hh"
#include "sim/sim_object.hh"

#include "base/filters/h3_bloom_filter.hh"

namespace py = pybind11;

namespace gem5
{

static void
module_init(py::module_ &m_internal)
{
    py::module_ m = m_internal.def_submodule("param_BloomFilterH3");
    py::class_<BloomFilterH3Params, BloomFilterMultiBitSelParams, std::unique_ptr<BloomFilterH3Params, py::nodelete>>(m, "BloomFilterH3Params")
        .def(py::init<>())
        .def("create", &BloomFilterH3Params::create)
        ;

    py::class_<gem5::bloom_filter::H3, gem5::bloom_filter::MultiBitSel, std::unique_ptr<gem5::bloom_filter::H3, py::nodelete>>(m, "gem5_COLONS_bloom_filter_COLONS_H3")
        ;

}

static EmbeddedPyBind embed_obj("BloomFilterH3", module_init, "BloomFilterMultiBitSel");

} // namespace gem5

namespace gem5
{

namespace
{

class DummyBloomFilterH3ParamsClass
{
  public:
    gem5::bloom_filter::H3 *create() const;
};

template <class CxxClass, class Enable=void>
class DummyBloomFilterH3Shunt;

template <class CxxClass>
class DummyBloomFilterH3Shunt<CxxClass, std::enable_if_t<
    std::is_constructible_v<CxxClass,
        const BloomFilterH3Params &>>>
{
  public:
    using Params = BloomFilterH3Params;
    static gem5::bloom_filter::H3 *
    create(const Params &p)
    {
        return new CxxClass(p);
    }
};

template <class CxxClass>
class DummyBloomFilterH3Shunt<CxxClass, std::enable_if_t<
    !std::is_constructible_v<CxxClass,
        const BloomFilterH3Params &>>>
{
  public:
    using Params = DummyBloomFilterH3ParamsClass;
    static gem5::bloom_filter::H3 *
    create(const Params &p)
    {
        return nullptr;
    }
};

} // anonymous namespace

[[maybe_unused]] gem5::bloom_filter::H3 *
DummyBloomFilterH3Shunt<gem5::bloom_filter::H3>::Params::create() const
{
    return DummyBloomFilterH3Shunt<gem5::bloom_filter::H3>::
        create(*this);
}

} // namespace gem5
