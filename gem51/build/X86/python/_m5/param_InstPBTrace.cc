/**
 * DO NOT EDIT THIS FILE!
 * File automatically generated by
 *   build_tools/sim_object_param_struct_cc.py:62
 */

#include "pybind11/pybind11.h"
#include "pybind11/stl.h"

#include <type_traits>

#include "base/compiler.hh"
#include "params/InstPBTrace.hh"
#include "sim/init.hh"
#include "sim/sim_object.hh"

#include "cpu/inst_pb_trace.hh"

#include <string>
namespace py = pybind11;

namespace gem5
{

static void
module_init(py::module_ &m_internal)
{
    py::module_ m = m_internal.def_submodule("param_InstPBTrace");
    py::class_<InstPBTraceParams, InstTracerParams, std::unique_ptr<InstPBTraceParams, py::nodelete>>(m, "InstPBTraceParams")
        .def(py::init<>())
        .def("create", &InstPBTraceParams::create)
        .def_readwrite("file_name", &InstPBTraceParams::file_name)
        ;

    py::class_<gem5::Trace::InstPBTrace, gem5::Trace::InstTracer, std::unique_ptr<gem5::Trace::InstPBTrace, py::nodelete>>(m, "gem5_COLONS_Trace_COLONS_InstPBTrace")
        ;

}

static EmbeddedPyBind embed_obj("InstPBTrace", module_init, "InstTracer");

} // namespace gem5

namespace gem5
{

namespace
{

class DummyInstPBTraceParamsClass
{
  public:
    gem5::Trace::InstPBTrace *create() const;
};

template <class CxxClass, class Enable=void>
class DummyInstPBTraceShunt;

template <class CxxClass>
class DummyInstPBTraceShunt<CxxClass, std::enable_if_t<
    std::is_constructible_v<CxxClass,
        const InstPBTraceParams &>>>
{
  public:
    using Params = InstPBTraceParams;
    static gem5::Trace::InstPBTrace *
    create(const Params &p)
    {
        return new CxxClass(p);
    }
};

template <class CxxClass>
class DummyInstPBTraceShunt<CxxClass, std::enable_if_t<
    !std::is_constructible_v<CxxClass,
        const InstPBTraceParams &>>>
{
  public:
    using Params = DummyInstPBTraceParamsClass;
    static gem5::Trace::InstPBTrace *
    create(const Params &p)
    {
        return nullptr;
    }
};

} // anonymous namespace

[[maybe_unused]] gem5::Trace::InstPBTrace *
DummyInstPBTraceShunt<gem5::Trace::InstPBTrace>::Params::create() const
{
    return DummyInstPBTraceShunt<gem5::Trace::InstPBTrace>::
        create(*this);
}

} // namespace gem5
