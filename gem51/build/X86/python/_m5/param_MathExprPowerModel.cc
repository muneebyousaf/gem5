/**
 * DO NOT EDIT THIS FILE!
 * File automatically generated by
 *   build_tools/sim_object_param_struct_cc.py:62
 */

#include "pybind11/pybind11.h"
#include "pybind11/stl.h"

#include <type_traits>

#include "base/compiler.hh"
#include "params/MathExprPowerModel.hh"
#include "sim/init.hh"
#include "sim/sim_object.hh"

#include "sim/power/mathexpr_powermodel.hh"

#include <string>
#include <string>
namespace py = pybind11;

namespace gem5
{

static void
module_init(py::module_ &m_internal)
{
    py::module_ m = m_internal.def_submodule("param_MathExprPowerModel");
    py::class_<MathExprPowerModelParams, PowerModelStateParams, std::unique_ptr<MathExprPowerModelParams, py::nodelete>>(m, "MathExprPowerModelParams")
        .def(py::init<>())
        .def("create", &MathExprPowerModelParams::create)
        .def_readwrite("dyn", &MathExprPowerModelParams::dyn)
        .def_readwrite("st", &MathExprPowerModelParams::st)
        ;

    py::class_<gem5::MathExprPowerModel, gem5::PowerModelState, std::unique_ptr<gem5::MathExprPowerModel, py::nodelete>>(m, "gem5_COLONS_MathExprPowerModel")
        ;

}

static EmbeddedPyBind embed_obj("MathExprPowerModel", module_init, "PowerModelState");

} // namespace gem5

namespace gem5
{

namespace
{

class DummyMathExprPowerModelParamsClass
{
  public:
    gem5::MathExprPowerModel *create() const;
};

template <class CxxClass, class Enable=void>
class DummyMathExprPowerModelShunt;

template <class CxxClass>
class DummyMathExprPowerModelShunt<CxxClass, std::enable_if_t<
    std::is_constructible_v<CxxClass,
        const MathExprPowerModelParams &>>>
{
  public:
    using Params = MathExprPowerModelParams;
    static gem5::MathExprPowerModel *
    create(const Params &p)
    {
        return new CxxClass(p);
    }
};

template <class CxxClass>
class DummyMathExprPowerModelShunt<CxxClass, std::enable_if_t<
    !std::is_constructible_v<CxxClass,
        const MathExprPowerModelParams &>>>
{
  public:
    using Params = DummyMathExprPowerModelParamsClass;
    static gem5::MathExprPowerModel *
    create(const Params &p)
    {
        return nullptr;
    }
};

} // anonymous namespace

[[maybe_unused]] gem5::MathExprPowerModel *
DummyMathExprPowerModelShunt<gem5::MathExprPowerModel>::Params::create() const
{
    return DummyMathExprPowerModelShunt<gem5::MathExprPowerModel>::
        create(*this);
}

} // namespace gem5
